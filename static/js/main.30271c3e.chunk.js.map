{"version":3,"sources":["storage/jokes.js","utility/fetchJoke.js","App.js","serviceWorker.js","index.js"],"names":["jokesCollection","id","type","setup","punchline","fetchRandomProgrammingJoke","min","max","randomIndex","length","Math","floor","random","StyledContainer","styled","Container","MenuExampleTabularOnLeft","state","activeItem","segmentText","bio","links","contact","joke","handleItemClick","e","name","populateJoke","setState","console","log","JSON","stringify","formattedJoke","prevSegmentText","this","textAlign","Grid","Column","width","Menu","fluid","vertical","tabular","Item","active","onClick","content","stretched","Segment","dangerouslySetInnerHTML","__html","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4UAAaA,EAAkB,CAC7B,CACEC,GAAI,GACJC,KAAM,cACNC,MAAO,yCACPC,UAAW,mDAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,oDACPC,UAAW,eAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,wCACPC,UAAW,gBAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,uCACPC,UAAW,iCAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,4DACPC,UAAW,4BAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,mEACPC,UAAW,qBAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,2DACPC,UAAW,kCAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MACE,wGACFC,UAAW,oCAEb,CAAEH,GAAI,GAAIC,KAAM,cAAeC,MAAO,iBAAkBC,UAAW,mBACnE,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,qCACPC,UAAW,+CAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,gDACPC,UAAW,mDAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,sCACPC,UAAW,2BAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,wCACPC,UAAW,yBAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,0CACPC,UAAW,mCAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,mCACPC,UAAW,uDAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,2CACPC,UAAW,gCAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,iDACPC,UAAW,2CAEb,CACEH,GAAI,GACJC,KAAM,cACNC,MAAO,+DACPC,UAAW,+CAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,eACPC,UAAW,mCAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,wCACPC,UAAW,kDAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,4EACPC,UAAW,mFAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,8CACPC,UACE,gGAEJ,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,yCACPC,UAAW,qBAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,8CACPC,UAAW,oBAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,sDACPC,UAAW,oEAEb,CACEH,GAAI,IACJC,KAAM,cACNC,MAAO,8DACPC,UAAW,gCClJFC,EAA6B,WACxC,IAL8BC,EAAKC,EAM7BC,GANwBF,EAMa,EANRC,EAKbP,EAAgBS,OAJ/BC,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,GAAOA,IAMhD,OAAON,EAAgBQ,I,0FCJzB,IAAMK,EAAkBC,YAAOC,IAAPD,CAAH,KAIAE,E,4MACnBC,MAAQ,CACNC,WAAY,MACZC,YAAa,CACXC,IACE,mzBASFC,MACE,iWAIFC,QACE,wMAGFC,KAAM,mE,EAIVC,gBAAkB,SAACC,EAAD,GAAkB,IAAZC,EAAW,EAAXA,KACT,SAATA,GAAiB,EAAKC,eAC1B,EAAKC,SAAS,CAAEV,WAAYQ,K,EAG9BC,aAAe,WAAO,IAAD,EACUtB,IAArBF,EADW,EACXA,MAAOC,EADI,EACJA,UAEfyB,QAAQC,IAAR,2BAAgCC,KAAKC,UAAU,CAAE7B,QAAOC,gBACxD,IAAM6B,EAAgB,cAAO9B,EAAP,uBAA6BC,EAA7B,SAChB8B,EAAkB,EAAKjB,MAAME,YACnC,EAAKS,SAAS,CAAET,YAAY,eAAMe,EAAP,CAAwBX,KAAMU,O,uDAGjD,IAAD,EAC6BE,KAAKlB,MAAjCC,EADD,EACCA,WAAYC,EADb,EACaA,YAEpB,OACE,kBAACN,EAAD,CAAiBuB,UAAW,UAC1B,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAClB,kBAACC,EAAA,EAAD,CAAMC,OAAK,EAACC,UAAQ,EAACC,SAAO,GAC1B,kBAACH,EAAA,EAAKI,KAAN,CAAWlB,KAAK,MAAMmB,OAAuB,QAAf3B,EAAsB4B,QAASX,KAAKX,kBAClE,kBAACgB,EAAA,EAAKI,KAAN,CACEG,QAAS,mBACTrB,KAAK,QACLmB,OAAuB,UAAf3B,EACR4B,QAASX,KAAKX,kBAEhB,kBAACgB,EAAA,EAAKI,KAAN,CACElB,KAAK,UACLmB,OAAuB,YAAf3B,EACR4B,QAASX,KAAKX,kBAEhB,kBAACgB,EAAA,EAAKI,KAAN,CACElB,KAAK,OACLmB,OAAuB,SAAf3B,EACR4B,QAASX,KAAKX,oBAKpB,kBAACa,EAAA,EAAKC,OAAN,CAAaU,WAAS,EAACT,MAAO,IAC5B,kBAACU,EAAA,EAAD,CAASC,wBAAyB,CAAEC,OAAQhC,EAAYD,a,GAtEdkC,aCGlCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,c","file":"static/js/main.30271c3e.chunk.js","sourcesContent":["export const jokesCollection = [\n  {\n    id: 15,\n    type: 'programming',\n    setup: \"What's the best thing about a Boolean?\",\n    punchline: \"Even if you're wrong, you're only off by a bit.\",\n  },\n  {\n    id: 16,\n    type: 'programming',\n    setup: \"What's the object-oriented way to become wealthy?\",\n    punchline: 'Inheritance',\n  },\n  {\n    id: 17,\n    type: 'programming',\n    setup: 'Where do programmers like to hangout?',\n    punchline: 'The Foo Bar.',\n  },\n  {\n    id: 18,\n    type: 'programming',\n    setup: 'Why did the programmer quit his job?',\n    punchline: \"Because he didn't get arrays.\",\n  },\n  {\n    id: 23,\n    type: 'programming',\n    setup: 'Why do programmers always mix up Halloween and Christmas?',\n    punchline: 'Because Oct 31 == Dec 25',\n  },\n  {\n    id: 24,\n    type: 'programming',\n    setup: 'A SQL query walks into a bar, walks up to two tables and asks...',\n    punchline: \"'Can I join you?'\",\n  },\n  {\n    id: 25,\n    type: 'programming',\n    setup: 'How many programmers does it take to change a lightbulb?',\n    punchline: \"None that's a hardware problem\",\n  },\n  {\n    id: 26,\n    type: 'programming',\n    setup:\n      'If you put a million monkeys at a million keyboards, one of them will eventually write a Java program',\n    punchline: 'the rest of them will write Perl',\n  },\n  { id: 27, type: 'programming', setup: \"['hip', 'hip']\", punchline: '(hip hip array)' },\n  {\n    id: 28,\n    type: 'programming',\n    setup: 'To understand what recursion is...',\n    punchline: 'You must first understand what recursion is',\n  },\n  {\n    id: 29,\n    type: 'programming',\n    setup: 'There are 10 types of people in this world...',\n    punchline: \"Those who understand binary and those who don't\",\n  },\n  {\n    id: 33,\n    type: 'programming',\n    setup: 'Which song would an exception sing?',\n    punchline: \"Can't catch me - Avicii\",\n  },\n  {\n    id: 35,\n    type: 'programming',\n    setup: 'Why do Java programmers wear glasses?',\n    punchline: \"Because they don't C#\",\n  },\n  {\n    id: 56,\n    type: 'programming',\n    setup: 'How do you check if a webpage is HTML5?',\n    punchline: 'Try it out on Internet Explorer',\n  },\n  {\n    id: 60,\n    type: 'programming',\n    setup: 'A user interface is like a joke.',\n    punchline: 'If you have to explain it then it is not that good.',\n  },\n  {\n    id: 72,\n    type: 'programming',\n    setup: 'I was gonna tell you a joke about UDP...',\n    punchline: '...but you might not get it.',\n  },\n  {\n    id: 73,\n    type: 'programming',\n    setup: 'The punchline often arrives before the set-up.',\n    punchline: 'Do you know the problem with UDP jokes?',\n  },\n  {\n    id: 74,\n    type: 'programming',\n    setup: 'Why do C# and Java developers keep breaking their keyboards?',\n    punchline: 'Because they use a strongly typed language.',\n  },\n  {\n    id: 377,\n    type: 'programming',\n    setup: 'Knock-knock.',\n    punchline: 'A race condition. Who is there?',\n  },\n  {\n    id: 378,\n    type: 'programming',\n    setup: \"What's the best part about TCP jokes?\",\n    punchline: 'I get to keep telling them until you get them.',\n  },\n  {\n    id: 379,\n    type: 'programming',\n    setup: 'A programmer puts two glasses on his bedside table before going to sleep.',\n    punchline: 'A full one, in case he gets thirsty, and an empty one, in case he doesn’t.',\n  },\n  {\n    id: 380,\n    type: 'programming',\n    setup: 'There are 10 kinds of people in this world.',\n    punchline:\n      \"Those who understand binary, those who don't, and those who weren't expecting a base 3 joke.\",\n  },\n  {\n    id: 382,\n    type: 'programming',\n    setup: 'What did the router say to the doctor?',\n    punchline: 'It hurts when IP.',\n  },\n  {\n    id: 383,\n    type: 'programming',\n    setup: 'An IPv6 packet is walking out of the house.',\n    punchline: 'He goes nowhere.',\n  },\n  {\n    id: 384,\n    type: 'programming',\n    setup: 'A DHCP packet walks into a bar and asks for a beer.',\n    punchline: 'Bartender says, \"here, but I’ll need that back in an hour!\"',\n  },\n  {\n    id: 385,\n    type: 'programming',\n    setup: '3 SQL statements walk into a NoSQL bar. Soon, they walk out',\n    punchline: \"They couldn't find a table.\",\n  },\n];\n\nexport default {\n  jokesCollection,\n};\n","import { jokesCollection } from '../storage/jokes';\n\nconst getRandomNumberInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const fetchRandomProgrammingJoke = () => {\n  const numberOfJokes = jokesCollection.length;\n  const randomIndex = getRandomNumberInRange(0, numberOfJokes);\n  return jokesCollection[randomIndex];\n};\n\nexport default {\n  fetchRandomProgrammingJoke,\n};\n","import React, { Component } from 'react';\nimport { Container, Grid, Menu, Segment } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { fetchRandomProgrammingJoke } from './utility/fetchJoke';\n\nconst StyledContainer = styled(Container)`\n  margin-top: 5%;\n`;\n\nexport default class MenuExampleTabularOnLeft extends Component {\n  state = {\n    activeItem: 'bio',\n    segmentText: {\n      bio:\n        '<h2>Hi, I am Tahmid</h2> <h4>I like to play with computers. I am currently working as a Software Engineer ' +\n        'at <a href=\"https://newscred.com/\" target=\"_blank\">NewsCred</a>, and my team name is ' +\n        '<strong>Public API</strong>. The absence of fancy design and styling in my website is evident that ' +\n        'I mostly work in backend. But, like a wise man once said, looks can be deceiving! ' +\n        '<br><br>I actually am a FullStack Engineer (no, my stack does not overflow if you give me a task) with experience ' +\n        'in Python, Node and ReactJS.<br><br>In my free time, I like to break stuff in the name of building ' +\n        'something beautiful. Also, I am highly interested in problem solving, and like to read about various ' +\n        'Computer Science stuff.</h4><br>Did I mention that I can discuss ' +\n        '<strong>Distributed System Design</strong> over coffee for hours?',\n      links:\n        '<h4>What you seek is seeking you!</h4>' +\n        '<strong><a href=\"https://github.com/tahmid-choyon\" target=\"_blank\">Github</a></strong><br>' +\n        '<strong><a href=\"https://www.linkedin.com/in/tahmid-choyon/\" target=\"_blank\">LinkedIn</a></strong><br>' +\n        '<strong><a href=\"https://drive.google.com/open?id=1Q0lXCvQNli16xssMJgAOQQyOiEFHOI9R\" target=\"_blank\">Resume</a></strong>',\n      contact:\n        '<h4>Email: <a href=\"mailto:tahmid.choyon@gmail.com\">tahmid.choyon@gmail.com</a></h4>' +\n        'or' +\n        '<h4>Drop a message in my <a href=\"https://www.linkedin.com/in/tahmid-choyon/\" target=\"_blank\">LinkedIn</a></h4>',\n      joke: '<h3>If you are seeing this, check console for the joke!!!</h3>',\n    },\n  };\n\n  handleItemClick = (e, { name }) => {\n    if (name === 'joke') this.populateJoke();\n    this.setState({ activeItem: name });\n  };\n\n  populateJoke = () => {\n    const { setup, punchline } = fetchRandomProgrammingJoke();\n\n    console.log(`Got it from API: ${JSON.stringify({ setup, punchline })}`);\n    const formattedJoke = `<h3>${setup}</h3>` + `<h4>${punchline}</h4>`;\n    const prevSegmentText = this.state.segmentText;\n    this.setState({ segmentText: { ...prevSegmentText, joke: formattedJoke } });\n  };\n\n  render() {\n    const { activeItem, segmentText } = this.state;\n\n    return (\n      <StyledContainer textAlign={'center'}>\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu fluid vertical tabular>\n              <Menu.Item name='bio' active={activeItem === 'bio'} onClick={this.handleItemClick} />\n              <Menu.Item\n                content={'Links and Resume'}\n                name='links'\n                active={activeItem === 'links'}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name='contact'\n                active={activeItem === 'contact'}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name='joke'\n                active={activeItem === 'joke'}\n                onClick={this.handleItemClick}\n              />\n            </Menu>\n          </Grid.Column>\n\n          <Grid.Column stretched width={12}>\n            <Segment dangerouslySetInnerHTML={{ __html: segmentText[activeItem] }} />\n          </Grid.Column>\n        </Grid>\n      </StyledContainer>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}